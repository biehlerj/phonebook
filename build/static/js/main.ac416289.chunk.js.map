{"version":3,"sources":["components/Filter.jsx","components/Notification.jsx","components/People.jsx","components/PersonForm.jsx","services/people.js","App.jsx","index.jsx"],"names":["Filter","onChangeHandler","onChange","Notification","message","className","People","people","onDelete","map","person","key","name","number","onClick","id","window","confirm","PersonForm","onSubmitHandler","newName","onChangeNameHandler","newNumber","onChangeNumberHandler","onSubmit","value","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPeople","setNewName","setNewNumber","filterName","setFilterName","showAll","setShowAll","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","peopleService","initialPeople","entriesToShow","filter","toFilter","toLocaleLowerCase","toSearch","toLowerCase","includes","event","target","preventDefault","toUpdate","p","length","updatedPerson","updatedState","setTimeout","catch","err","personObject","returnedNote","undefined","find","el","alert","updatedPeople","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac416289.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ onChangeHandler }) => (\n  <p>filter shown with <input onChange={onChangeHandler} /></p>\n);\n\nexport default Filter;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) return null;\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst People = ({ people, onDelete }) => {\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) onDelete(id);\n  };\n\n  return (\n    <>\n      {people.map((person) => (\n        <p key={person.name}>\n          {person.name}\n          {' '}\n          {person.number}\n          <button onClick={() => deletePerson(person.id, person.name)}>delete</button>\n        </p>\n      ))}\n    </>\n  );\n};\n\nexport default People;\n","import React from 'react';\n\nconst PersonForm = ({\n  onSubmitHandler,\n  newName,\n  onChangeNameHandler,\n  newNumber,\n  onChangeNumberHandler,\n}) => (\n  <>\n    <form onSubmit={onSubmitHandler}>\n      <div>\n        name:\n        <input value={newName} onChange={onChangeNameHandler} />\n      </div>\n      <div>\n        number:\n        <input value={newNumber} onChange={onChangeNumberHandler} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  </>\n);\n\nexport default PersonForm;\n","import axios from 'axios';\n\nconst baseUrl = 'http://localhost:3001/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n\n  return request;\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import React, { useEffect, useState } from 'react';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport People from './components/People';\nimport PersonForm from './components/PersonForm';\nimport peopleService from './services/people';\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filterName, setFilterName] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    peopleService.getAll()\n      .then((initialPeople) => setPeople(initialPeople));\n  }, []);\n\n  const entriesToShow = showAll ? people : people.filter((person) => {\n    const toFilter = person.name.toLocaleLowerCase();\n    const toSearch = filterName.toLowerCase();\n\n    return toFilter.includes(toSearch);\n  });\n\n  const isAdded = (name, data) => {\n    const checkIsAdded = data.find((el) => el.name === name);\n    if (checkIsAdded === undefined) {\n      return false;\n    }\n    return true;\n  };\n\n  const addContact = (event) => {\n    event.preventDefault();\n    // Check if the contact already exists\n    const toUpdate = people.filter((p) => p.name.includes(newName));\n    if (toUpdate.length === 1) {\n      const confirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n      if (confirm) {\n        peopleService\n          .update(toUpdate[0].id, {\n            ...toUpdate[0],\n            number: newNumber,\n          })\n          .then((updatedPerson) => {\n            let updatedState = people.filter((p) => p.id !== updatedPerson.id);\n            updatedState = [...updatedState, updatedPerson];\n            setPeople(updatedState);\n            setNewName('');\n            setNewNumber('');\n            setNotificationMessage(`Added ${updatedPerson.name}`);\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 2000);\n          })\n          .catch((err) => {\n            setErrorMessage(`Information of ${newName} has already been removed from server`);\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n          });\n      }\n    } else {\n      // if not, save the person\n      const personObject = {\n        name: newName,\n        number: newNumber,\n        id: people[people.length - 1].id + 1,\n      };\n\n      peopleService\n        .create(personObject)\n        .then((returnedNote) => {\n          if (isAdded(newName, people)) {\n            alert(`${newName} is already added to phonebook`);\n          } else {\n            setPeople([...people, { name: newName, number: newNumber }]);\n          }\n          setNotificationMessage(`Added ${newName}`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 2000);\n          setNewName('');\n          setNewNumber('');\n        })\n        .catch((err) => {\n          setErrorMessage(`Information of ${newName} has already been removed from server`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const removePerson = (id) => {\n    peopleService\n      .remove(id)\n      .then(() => {\n        const updatedPeople = people.filter((person) => person.id !== id);\n        setPeople(updatedPeople);\n      });\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilter = (event) => {\n    setFilterName(event.target.value);\n    setShowAll(false);\n  };\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notificationMessage} />\n      <Notification type=\"error\" message={errorMessage} />\n\n      <Filter onChangeHandler={handleFilter} />\n\n      <h2>add a new</h2>\n\n      <PersonForm\n        onSubmitHandler={addContact}\n        newName={newName}\n        onChangeNameHandler={handleNameChange}\n        newNumber={newNumber}\n        onChangeNumberHandler={handleNewNumber}\n      />\n\n      <h3>Numbers</h3>\n\n      <People people={entriesToShow} onDelete={removePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}